"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.getTargetRect=getTargetRect,exports.getFixedTop=getFixedTop,exports.getFixedBottom=getFixedBottom,exports.getObserverEntities=getObserverEntities,exports.addObserveTarget=addObserveTarget,exports.removeObserveTarget=removeObserveTarget;var _addEventListener=_interopRequireDefault(require("rc-util/lib/Dom/addEventListener"));function getTargetRect(target){return target!==window?target.getBoundingClientRect():{top:0,bottom:window.innerHeight}}function getFixedTop(placeholderReact,targetRect,offsetTop){if(void 0!==offsetTop&&targetRect.top>placeholderReact.top-offsetTop)return offsetTop+targetRect.top}function getFixedBottom(placeholderReact,targetRect,offsetBottom){if(void 0!==offsetBottom&&targetRect.bottom<placeholderReact.bottom+offsetBottom)return offsetBottom+(window.innerHeight-targetRect.bottom)}var TRIGGER_EVENTS=["resize","scroll","touchstart","touchmove","touchend","pageshow","load"],observerEntities=[];function getObserverEntities(){return observerEntities}function addObserveTarget(target,affix){if(target){var entity=observerEntities.find((function(item){return item.target===target}));entity?entity.affixList.push(affix):(entity={target:target,affixList:[affix],eventHandlers:{}},observerEntities.push(entity),TRIGGER_EVENTS.forEach((function(eventName){entity.eventHandlers[eventName]=(0,_addEventListener.default)(target,eventName,(function(){entity.affixList.forEach((function(targetAffix){targetAffix.lazyUpdatePosition()}))}))})))}}function removeObserveTarget(affix){var observerEntity=observerEntities.find((function(oriObserverEntity){var hasAffix=oriObserverEntity.affixList.some((function(item){return item===affix}));return hasAffix&&(oriObserverEntity.affixList=oriObserverEntity.affixList.filter((function(item){return item!==affix}))),hasAffix}));observerEntity&&0===observerEntity.affixList.length&&(observerEntities=observerEntities.filter((function(item){return item!==observerEntity})),TRIGGER_EVENTS.forEach((function(eventName){var handler=observerEntity.eventHandlers[eventName];handler&&handler.remove&&handler.remove()})))}