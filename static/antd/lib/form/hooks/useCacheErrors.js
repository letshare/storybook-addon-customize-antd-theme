"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useCacheErrors;var React=_interopRequireWildcard(require("react")),_useForceUpdate=_interopRequireDefault(require("../../_util/hooks/useForceUpdate"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function useCacheErrors(errors,changeTrigger,directly){var cacheRef=React.useRef({errors:errors,visible:!!errors.length}),forceUpdate=(0,_useForceUpdate.default)(),update=function update(){var prevVisible=cacheRef.current.visible,newVisible=!!errors.length,prevErrors=cacheRef.current.errors;cacheRef.current.errors=errors,cacheRef.current.visible=newVisible,prevVisible!==newVisible?changeTrigger(newVisible):(prevErrors.length!==errors.length||prevErrors.some((function(prevErr,index){return prevErr!==errors[index]})))&&forceUpdate()};return React.useEffect((function(){if(!directly){var timeout=setTimeout(update,10);return function(){return clearTimeout(timeout)}}}),[errors]),directly&&update(),[cacheRef.current.visible,cacheRef.current.errors]}