"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useFrameState;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),React=_interopRequireWildcard(require("react")),_raf=_interopRequireDefault(require("rc-util/lib/raf"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function useFrameState(defaultValue){var _React$useState=React.useState(defaultValue),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1],frameRef=(0,React.useRef)(null),batchRef=(0,React.useRef)([]),destroyRef=(0,React.useRef)(!1);return React.useEffect((function(){return function(){destroyRef.current=!0,_raf.default.cancel(frameRef.current)}}),[]),[value,function setFrameValue(updater){destroyRef.current||(null===frameRef.current&&(batchRef.current=[],frameRef.current=(0,_raf.default)((function(){frameRef.current=null,setValue((function(prevValue){var current=prevValue;return batchRef.current.forEach((function(func){current=func(current)})),current}))}))),batchRef.current.push(updater))}]}